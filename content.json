{"meta":{"title":"XiaoYang","subtitle":null,"description":"简单记录些工作的东西","author":"xiao yang","url":"https://xiaoyang678.github.io"},"pages":[{"title":"categories","date":"2019-08-05T02:34:22.945Z","updated":"2019-08-05T02:34:22.945Z","comments":true,"path":"categories/index.html","permalink":"https://xiaoyang678.github.io/categories/index.html","excerpt":"","text":""},{"title":"关于","date":"2019-01-13T11:57:53.000Z","updated":"2019-08-05T02:47:40.486Z","comments":true,"path":"about/index.html","permalink":"https://xiaoyang678.github.io/about/index.html","excerpt":"时间这个东西真的可怕，希望回头看的时候别太后悔。","text":"时间这个东西真的可怕，希望回头看的时候别太后悔。"},{"title":"tags","date":"2019-08-05T02:33:21.732Z","updated":"2019-08-05T02:33:21.732Z","comments":true,"path":"tags/index.html","permalink":"https://xiaoyang678.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"node-sass安装失败","slug":"node-sass安装失败","date":"2019-11-08T07:32:41.000Z","updated":"2019-11-08T07:37:37.700Z","comments":true,"path":"2019/11/08/node-sass安装失败/","link":"","permalink":"https://xiaoyang678.github.io/2019/11/08/node-sass安装失败/","excerpt":"node-sass安装失败，一般以下两种解决办法 我们一般更希望能跨平台、并且直接使用 npm install 安装所有依赖，所以我的做法是在项目内添加一个 .npmrc 文件： 1234sass_binary_site=https://npm.taobao.org/mirrors/node-sass/phantomjs_cdnurl=https://npm.taobao.org/mirrors/phantomjs/electron_mirror=https://npm.taobao.org/mirrors/electron/registry=https://registry.npm.taobao.org","text":"node-sass安装失败，一般以下两种解决办法 我们一般更希望能跨平台、并且直接使用 npm install 安装所有依赖，所以我的做法是在项目内添加一个 .npmrc 文件： 1234sass_binary_site=https://npm.taobao.org/mirrors/node-sass/phantomjs_cdnurl=https://npm.taobao.org/mirrors/phantomjs/electron_mirror=https://npm.taobao.org/mirrors/electron/registry=https://registry.npm.taobao.org 使用梯子 12345npm config set proxy http://127.0.0.1:1080npm i node-sass# 下载完成后删除 http 代理npm config delete proxy","categories":[],"tags":[]},{"title":"日记20190805","slug":"日记20190805","date":"2019-08-05T03:37:21.000Z","updated":"2019-08-05T06:20:50.464Z","comments":true,"path":"2019/08/05/日记20190805/","link":"","permalink":"https://xiaoyang678.github.io/2019/08/05/日记20190805/","excerpt":"","text":"最近重新开始写博客了，顺手有空也开始写写日记吧。记录下平常生活中发生的事情。最近自己的生活，工作一直都不在状态上，很多事情都不是很理想，不是让自己很顺心的状态。其实我只是在等待一些事情，等那几件事情完成了。就差不多可以撤退了。","categories":[{"name":"日记","slug":"日记","permalink":"https://xiaoyang678.github.io/categories/日记/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://xiaoyang678.github.io/tags/日记/"}]},{"title":"AST抽象语法书初探","slug":"AST抽象语法书初探","date":"2019-08-05T03:36:36.000Z","updated":"2019-08-05T06:17:36.593Z","comments":true,"path":"2019/08/05/AST抽象语法书初探/","link":"","permalink":"https://xiaoyang678.github.io/2019/08/05/AST抽象语法书初探/","excerpt":"什么是AST","text":"什么是AST 如果你查看目前任何主流的项目中的devDependencies，会发现前些年的不计其数的插件诞生。我们归纳一下有：javascript转译、代码压缩、css预处理器、elint、pretiier，等。有很多js模块我们不会在生产环境用到，但是它们在我们的开发过程中充当着重要的角色。所有的上述工具，不管怎样，都建立在了AST这个巨人的肩膀上。 It is a hierarchical program representation that presents source code structure according to the grammar of a programming language, each AST node corresponds to an item of a source code. 以上是官方对AST(抽象语法树)给出的定义， 项目中使用AST之前也在一些博客文章中提到了，一直没有去深入了解下，什么是ast，ast能实现什么。正好最近项目要有个需求，需要遍历所有代码中的catch代码，并在catch代码块中，注入一段日志收集脚本。当时拿到这个需求的时候，脑海中第一个反应就是使用正则匹配，然后替换代码。等真正开始做的时候，发现，自己根本不会正则，网上很难找到满足需求的正则表达式。哈哈。然后就不要脸的发了个帖子，网友推荐了babel插件，我们项目上是用gulp来做的代码编译，就准本分析下这个babel插件看下，怎么实现的，可以自己写一个gulp插件去实现下。分析下来，发现babel插件是通过ast去实现对js代码的处理。","categories":[{"name":"AST","slug":"AST","permalink":"https://xiaoyang678.github.io/categories/AST/"}],"tags":[{"name":"AST","slug":"AST","permalink":"https://xiaoyang678.github.io/tags/AST/"},{"name":"javascript","slug":"javascript","permalink":"https://xiaoyang678.github.io/tags/javascript/"}]},{"title":"gulp 使用体验","slug":"gulp-使用体验","date":"2019-06-21T02:56:38.000Z","updated":"2019-08-05T03:39:14.914Z","comments":true,"path":"2019/06/21/gulp-使用体验/","link":"","permalink":"https://xiaoyang678.github.io/2019/06/21/gulp-使用体验/","excerpt":"什么是gulp个人理解gulp和webpack对比下来，gulp是一个轻量级的前端构建工具，下面摘抄别人博客对gulp的介绍","text":"什么是gulp个人理解gulp和webpack对比下来，gulp是一个轻量级的前端构建工具，下面摘抄别人博客对gulp的介绍 gulpjs是一个前端构建工具，与gruntjs相比，gulpjs无需写一大堆繁杂的配置参数，API也非常简单，学习起来很容易，而且gulpjs使用的是nodejs中stream来读取和操作数据，其速度更快。如果你还没有使用过前端构建工具，或者觉得gruntjs太难用的话，那就尝试一下gulp吧官网地址 https://www.gulpjs.com.cn/ ,现在gulp和webpack的官方文档很大一部分都已经中文化了，总的来说，gulp使用起来比webpack更加的简单，也更加的自由。有兴趣可以看下gulp的插件的源码，代码量都不是很多。 在使用gulp对老项目的代码进行打包的过程中，发现自身项目中有一个需求【每次发包前需要对项目代码中对一个xml文件进行一个格式内容对检查】,一开始看到处理这个的时候，脑海中第一个想法就是能不能通过gulp插件来实现尼，这样的话就可以很简单的通过多个task串行完成了。那么这种插件肯定是一种定制化了，就找了使用到的gulp-zip插件的源码来看一下了，发现源码很少，代码也很简单了。 然后就自己手动写一个gulp插件来实现功能了。","categories":[{"name":"体验","slug":"体验","permalink":"https://xiaoyang678.github.io/categories/体验/"}],"tags":[{"name":"体验","slug":"体验","permalink":"https://xiaoyang678.github.io/tags/体验/"},{"name":"gulp","slug":"gulp","permalink":"https://xiaoyang678.github.io/tags/gulp/"}]},{"title":"VSCode Sync gist记录","slug":"VSCode-Sync-gist记录","date":"2019-04-10T02:05:36.000Z","updated":"2019-08-07T01:35:21.433Z","comments":true,"path":"2019/04/10/VSCode-Sync-gist记录/","link":"","permalink":"https://xiaoyang678.github.io/2019/04/10/VSCode-Sync-gist记录/","excerpt":"","text":"记录下自己vscode 配置同步插件sync用到的gist 506a1e012e98f1484be0f2bacb703e6860090cf9 0d0d12ce5c0da041cc2a1e337e04e3d7","categories":[{"name":"记录","slug":"记录","permalink":"https://xiaoyang678.github.io/categories/记录/"}],"tags":[{"name":"gist","slug":"gist","permalink":"https://xiaoyang678.github.io/tags/gist/"},{"name":"记录","slug":"记录","permalink":"https://xiaoyang678.github.io/tags/记录/"},{"name":"VSCode","slug":"VSCode","permalink":"https://xiaoyang678.github.io/tags/VSCode/"},{"name":"Sync","slug":"Sync","permalink":"https://xiaoyang678.github.io/tags/Sync/"}]},{"title":"纪念哪些it大神们","slug":"纪念哪些it大神们","date":"2019-03-11T04:50:51.000Z","updated":"2019-08-05T02:46:31.690Z","comments":true,"path":"2019/03/11/纪念哪些it大神们/","link":"","permalink":"https://xiaoyang678.github.io/2019/03/11/纪念哪些it大神们/","excerpt":"最近突然看到几篇关于一些年轻的it大神，英年早逝的文章。 就整理下关于他们的百度百科链接，以此纪念下他们对it科学做出的贡献。 【排名先后无特殊意义】","text":"最近突然看到几篇关于一些年轻的it大神，英年早逝的文章。 就整理下关于他们的百度百科链接，以此纪念下他们对it科学做出的贡献。 【排名先后无特殊意义】 雷霄骅雷霄骅，中国传媒大学通信与信息系统专业博士生，2016年10月就将迎来自己26岁的生日，2016年7月17日凌晨他猝死在学校主楼五层。 借用新浪网友 @张新成010 的话，“你的博客纯粹是为了分享，写的很仔细，引领了多少人入门，在音视频方面有自己的见解，在当今音视频编解码封闭技术领域，你摒弃了别人的躲躲藏藏，无私奉献，你是伟大的，很多音视频方向的朋友称你为雷神，你无愧于这个称号！一个在大学里能静下心来做研究，又能无私分享的，尤其是在中国的大学里，你是难能可贵的佼佼者，至此以后，博客上不会再有更新，音视频的世界少了一颗将才。我已无语，痛心而疾，雷霄骅，雷神，感谢有你，天堂安好！” 雷霄骅CSDN知名技术博主。荣获2014、2015年度CSDN博客之星，2015年于美国微软总部荣膺微软大中华区MVP称号。他的技术博客突破了450万 访问量，其中的视音频技术专栏，被称为是视音频技术从业人员“优秀的参考手册”。 张腾飞张腾飞， 笔名Vamei，中国科学技术大学学士，南洋理工大学博士。著有《从Python开始学编程》等书，并写作Java、网络协议、数据分析等方面的教程。他的博客访问量超过800万。现从事智能农业领域的创新创业，任睿畜科技首席技术官。 一个被骗去养猪的程序员 苏享茂苏享茂，1980年出生于福建，毕业于北京邮电大学，wephone已故创始人。2012年，他创办了北京曵尾科技有限公司，推出WePhone。 2017年9月7日凌晨5时左右，苏享茂从天台跳下身亡。他留下的遗书称，遭前妻翟欣欣威胁并索要1000万元和房产赔偿。 事件发生后，引发各界热议。世纪佳缘官方微博声明称，经核实，苏享茂及前妻翟欣欣系世纪佳缘会员，并完成实名认证。世纪佳缘会密切关注事态进展，并配合相关部门进行调查取证工作。 欧建新欧建新，男，出生于湖南省邵阳市武冈县，毕业于北京航空航天大学，硕士研究生，原中兴通讯子公司中兴网信员工。2017年12月10日上午，在中兴通讯大楼坠亡","categories":[{"name":"随笔","slug":"随笔","permalink":"https://xiaoyang678.github.io/categories/随笔/"}],"tags":[{"name":"纪念","slug":"纪念","permalink":"https://xiaoyang678.github.io/tags/纪念/"}]},{"title":"windows下使用的软件","slug":"windows下使用的软件","date":"2019-03-06T01:15:35.000Z","updated":"2019-08-05T03:38:15.181Z","comments":true,"path":"2019/03/06/windows下使用的软件/","link":"","permalink":"https://xiaoyang678.github.io/2019/03/06/windows下使用的软件/","excerpt":"备份记录下自己window电脑下使用的软件，防丢失","text":"备份记录下自己window电脑下使用的软件，防丢失 开发IDEAndroid Studio，JetBrains PyCharm，JetBrains WebStorm，Notepad++，Sublime Text 3，Visual Studio Code MD 编辑器Typora 前端工具Mark Man，Photoshop CC 2019，Koala 网络工具Charles，Wireshark 自动化测试Appium 文件比对BCompare 系统工具相关CCleaner ，GlassWire，DiskInfo64，搜索 Everything，AS SSD， 下载EagleGet 浏览器Firefox ，Google Chrome，Start Tor Browser 邮箱Foxmail 虚拟机模拟器Genymotion，VirtualBox 代码管理svn，tor svn，git ，tor git，GitHub Desktop 数据库，服务器HeidiSQL，Robo 3T，Xftp 6，Xshell 6 IM腾讯QQ，微信，Telegram 远程VNC Viewer，TeamViewer 接口SoapUI，Postman，TCP&amp;UDP测试工具 笔记印象笔记 其他Docker for Windows，Shadowsocks，QuickLook 脑图XMind ZEN，亿图图示","categories":[{"name":"记录","slug":"记录","permalink":"https://xiaoyang678.github.io/categories/记录/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://xiaoyang678.github.io/tags/windows/"},{"name":"软件","slug":"软件","permalink":"https://xiaoyang678.github.io/tags/软件/"}]},{"title":"2018总结","slug":"2018总结","date":"2019-02-01T03:01:57.000Z","updated":"2019-08-05T02:45:23.193Z","comments":true,"path":"2019/02/01/2018总结/","link":"","permalink":"https://xiaoyang678.github.io/2019/02/01/2018总结/","excerpt":"趁着年前放假还有两天，抽着空在划水的过程中1把8年的总结写下。 18年对我来说变化还是比较大的，有好多个第一次，第一次跨省出差，第一次跟进项目上线，第一次跳槽，第一次参与招标等等。","text":"趁着年前放假还有两天，抽着空在划水的过程中1把8年的总结写下。 18年对我来说变化还是比较大的，有好多个第一次，第一次跨省出差，第一次跟进项目上线，第一次跳槽，第一次参与招标等等。先说下之前在上家公司zywx的时候，在最后三四月份的时候已经准备了离职的，但是因为当时手上的项目刚刚走上正轨，还没有交付上线，因为一些其他的原因什么的，最终项目实际面向客户负责的就是我一个人了。本来准备的离职的，就把这个当作一个提升自己经验的机会了。四月份的时候，出差在四川带了一共将近一个月的时候吧，中间其实也收获了很多，而且在四川的时候中间还发生了一些意外的小插曲大概这辈子也忘不了了。 后来项目上线后大概就是有两个多月的时间划水离职，准备跳槽到甲方的时间了，18年也没学什么新技术，还是技术水平还是停留在18年的水平，本来准备学学es6，vue，RN等框架的东西，看看原理，好好学一门后端语言的，结果啥都没做的成，七月份的时候接了一个私活，折折腾腾现在才到手了1w，中间也是拖拖拉拉，发现自己自从八月份入职新公司后，拖延症好严重哦，本来也就一个月左右的工作流，拖了好久就是没有完成，正好客户那边后端也有问题，需要调试什么的，也接受了这样的拖延，实际也是纵容了我的拖延症。 最近沟通下来，年后要改成小程序版本的，工时什么的都评估了，希望这次不要拖延吧，不然也不好交待，哈哈。 谈一谈在新公司的感受吧，总之就是一个字不爽，说的年薪 绩效各种扣，做的再好，也不过拿满合同上的工资，不会多一分钱。在现在的项目组也因为一些事情，要调到新的项目组，要是19年在新的项目组待的不怎么样，就考虑考虑挪一下窝了，虽然现在的窝很舒服，但是不爽。也就这样了，本来准备年底存点钱的，也没存的下，各种亏损，哎。。。。 19年加油吧，真的准备跳槽了。","categories":[{"name":"总结","slug":"总结","permalink":"https://xiaoyang678.github.io/categories/总结/"}],"tags":[{"name":"总结","slug":"总结","permalink":"https://xiaoyang678.github.io/tags/总结/"},{"name":"2018","slug":"2018","permalink":"https://xiaoyang678.github.io/tags/2018/"}]},{"title":"Electron初体验","slug":"Electron初体验","date":"2019-01-28T01:32:02.000Z","updated":"2019-08-05T02:45:31.288Z","comments":true,"path":"2019/01/28/Electron初体验/","link":"","permalink":"https://xiaoyang678.github.io/2019/01/28/Electron初体验/","excerpt":"前言Electron出来已经很久了，vscode也是基于Electron实现了，之前老早就想说写个Electrondemo玩下。终于年前空闲有空看看了。","text":"前言Electron出来已经很久了，vscode也是基于Electron实现了，之前老早就想说写个Electrondemo玩下。终于年前空闲有空看看了。 安装安装很简单就是跟着官方文档 npm i electron 就好了，不过过程中有个报错 12Downloading tmp-3324-0-electron-v4.0.2-win32-x64.zipError: read ECONNRESET 大概就是下载这个文件有异常，设置了代理就可以了 npm config set ELECTRON_MIRROR “https://npm.taobao.org/mirrors/electron/&quot; 具体的可以参考这个issues 文档官方文档","categories":[{"name":"体验","slug":"体验","permalink":"https://xiaoyang678.github.io/categories/体验/"}],"tags":[{"name":"Electron","slug":"Electron","permalink":"https://xiaoyang678.github.io/tags/Electron/"},{"name":"体验","slug":"体验","permalink":"https://xiaoyang678.github.io/tags/体验/"}]},{"title":"测试hexo引入图片","slug":"测试hexo引入图片","date":"2019-01-24T06:05:42.000Z","updated":"2019-08-05T02:46:21.767Z","comments":true,"path":"2019/01/24/测试hexo引入图片/","link":"","permalink":"https://xiaoyang678.github.io/2019/01/24/测试hexo引入图片/","excerpt":"测试hexo写文章引入图片 1![](./58e5aa29cda0c.jpg)","text":"测试hexo写文章引入图片 1![](./58e5aa29cda0c.jpg)","categories":[{"name":"记录","slug":"记录","permalink":"https://xiaoyang678.github.io/categories/记录/"}],"tags":[]},{"title":"win10下Genymotion启动异常","slug":"win10下Genymotion启动异常","date":"2019-01-24T02:10:39.000Z","updated":"2019-08-05T02:46:10.217Z","comments":true,"path":"2019/01/24/win10下Genymotion启动异常/","link":"","permalink":"https://xiaoyang678.github.io/2019/01/24/win10下Genymotion启动异常/","excerpt":"这边是做下问题的记录方便以后重复出现之前pc 系统换了ssd升级到了固态后，发现Genymotion模拟器不能用了，启动报错是cpu不支持虚拟化。","text":"这边是做下问题的记录方便以后重复出现之前pc 系统换了ssd升级到了固态后，发现Genymotion模拟器不能用了，启动报错是cpu不支持虚拟化。然后就fn+f2进了Bios模式看了，虚拟化是开启的。为什么这样尼。 下面记录下问题，是因为Hyper-V服务默认开启了。 手动关闭就好了。 右键管理员权限启动win10下的powershell 工具。 1bcdedit /set hypervisorlaunchtype off 重新启动模拟器就ok了。","categories":[{"name":"问题","slug":"问题","permalink":"https://xiaoyang678.github.io/categories/问题/"}],"tags":[{"name":"模拟器","slug":"模拟器","permalink":"https://xiaoyang678.github.io/tags/模拟器/"},{"name":"windows","slug":"windows","permalink":"https://xiaoyang678.github.io/tags/windows/"},{"name":"安卓","slug":"安卓","permalink":"https://xiaoyang678.github.io/tags/安卓/"},{"name":"虚拟机","slug":"虚拟机","permalink":"https://xiaoyang678.github.io/tags/虚拟机/"}]},{"title":"Hexo基本命令记录","slug":"hello-world","date":"2019-01-22T16:00:00.000Z","updated":"2019-08-05T02:45:42.248Z","comments":true,"path":"2019/01/23/hello-world/","link":"","permalink":"https://xiaoyang678.github.io/2019/01/23/hello-world/","excerpt":"How to start写新文章1$ hexo new \"My New Post\"","text":"How to start写新文章1$ hexo new \"My New Post\" 启动服务1$ hexo server || hexo s 编译文章1$ hexo generate || hexo g 构建文章1$ hexo deploy || hexo d","categories":[{"name":"记录","slug":"记录","permalink":"https://xiaoyang678.github.io/categories/记录/"}],"tags":[{"name":"记录","slug":"记录","permalink":"https://xiaoyang678.github.io/tags/记录/"},{"name":"Hexo","slug":"Hexo","permalink":"https://xiaoyang678.github.io/tags/Hexo/"},{"name":"命令","slug":"命令","permalink":"https://xiaoyang678.github.io/tags/命令/"}]}]}